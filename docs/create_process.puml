@startuml
allowmixing

actor "Library User" as user

class "TestProcessWrapper" as wrapper {
  - Dictionary<string, string> _arguments
  - Dictionary<string, string> _environmentVariables
  - ITestProcessBuilderFactory _testProcessBuilderFactory
  - ITestProcess _process
  + BuildConfiguration BuildConfiguration
  + bool IsCoverletEnabled

  + constructor(appProjectName, isCoverletEnabled, buildConfiguration)
  + AddCommandLineArgument(...)
  + AddEnvironmentVariable(...)
  + Start()
}

user -- wrapper : interact\nonly with >

interface "ITestProcessBuilderFactory" as factory_if << factory >> {
  + CreateBuilder(appProjectName, isCoverletEnabled, buildConfiguration)
}

class "TestProcessBuilderFactory" as factory << factory >>
factory_if <|-- factory

factory_if -* wrapper : _testProcessBuilderFactory

abstract class "TestProcessBuilder" as builder {
  + constructor(appProjectName)
  + CreateProcessStartInfo()
  + AddCommandLineArguments(...)
  + AddEnvironmentVariables(...)
  + Build()
}

wrapper::Start --> builder : use >

class "UnwrappedProcessBuilder" as unwrapped_builder
builder <|-- unwrapped_builder
factory --> unwrapped_builder : create >

class "CoverletWrappedProcessBuilder" as coverlet_builder
builder <|--- coverlet_builder
factory ---> coverlet_builder : create >

interface "ITestProcess" as process_if {
  + Start()
}

wrapper *- process_if : _process

class "TestProcess" as process
process_if <|-- process

builder -> process : create >
@enduml